#! /bin/sh

########################################################################
# Pipeline to combine the binary files from ChromHMM into one big file #
########################################################################

trap 'echo Keyboard interruption... ; exit 1' SIGINT

if [ $# -eq 0 ]; then
  echo "Usage:./combineChromHMMBinary.sh -i [input_dir] -o [output_name]"
  echo "e.g ./H1BigTablePipeline.sh -i TEST -o TEST"
  echo "input_dir : the dir containing binary files generated by chromHMM"
  echo "output_name: the name of your output file stored in input_dir"
exit 1
fi

while getopts ":i:o:" opt; do
  case $opt in
    i)
      echo "-i your input files are: $OPTARG" >&2
      input="$OPTARG"
      ;;
    o)
      echo "-o your output file is stored: $OPTARG" >&2
      output="$OPTARG"
      ;;                     
    \?)
      echo "Invalid option: -$OPTARG" >&2
      exit 1
      ;;
    :)
      echo "Option -$OPTARG requires an argument." >&2
      exit 1
      ;;
  esac
done

# get a file randomly from the list of binary files
dir=$input
n_files=`/bin/ls -1 "$dir" | wc -l | cut -f1`
rand_num=`awk "BEGIN{srand();print int($n_files * rand()) + 1;}"`
file=`/bin/ls -1 "$dir" | sed -ne "${rand_num}p"`
path=`cd $dir && echo "$PWD/$file"` # Converts to full path.  
echo "The header file is generated from: $path"

#get the header file
sed -n 2p "$path" > "$input/header.txt"

#combine all the files without the header
cd $input # go to the directory where the binary files are located
#tail -q -n+3 *_binary.bed >> tmp.txt
cat *_binary.bed >> tmp.txt

#combine header
cat header.txt tmp.txt > $output 

# remove the rest of the files
rm header.txt tmp.txt

